{
  "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
  "outputs": [
    {
      "data": "steps.8.produce",
      "name": "output predictions"
    }
  ],
  "created": "2019-06-20T21:30:12.492973Z",
  "inputs": [
    {
      "name": "dataset inputs"
    }
  ],
  "name": "Pipeline for evaluation",
  "digest": "similar_pipeline_d",
  "id": "similar_pipeline_d",
  "steps": [
    {
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "primitive": {
        "python_path": "d3m.primitives.data_transformation.denormalize.Common",
        "name": "Denormalize datasets",
        "digest": "00ae7955cc0abce2a3ddee96247209f3395009ae6553c7ce8caa577e402754db",
        "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
        "version": "0.2.0"
      },
      "arguments": {
        "inputs": {
          "data": "inputs.0",
          "type": "CONTAINER"
        }
      },
      "type": "PRIMITIVE"
    },
    {
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "primitive": {
        "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
        "name": "Extract a DataFrame from a Dataset",
        "digest": "0d46a2c5bc374e305682dc4f1c322518c07638153a8365034a513ea46960802b",
        "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
        "version": "0.3.0"
      },
      "arguments": {
        "inputs": {
          "data": "steps.0.produce",
          "type": "CONTAINER"
        }
      },
      "type": "PRIMITIVE"
    },
    {
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "primitive": {
        "python_path": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
        "name": "Parses strings into their types",
        "digest": "312cacc014497dd674e34765f6eb54430e594c591e760da0383c87844753d2ce",
        "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
        "version": "0.5.0"
      },
      "arguments": {
        "inputs": {
          "data": "steps.1.produce",
          "type": "CONTAINER"
        }
      },
      "type": "PRIMITIVE"
    },
    {
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "primitive": {
        "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
        "name": "Extracts columns by semantic type",
        "digest": "297a4943484bcd532650d5727e23b3d11ca702688d7b64dfb5df8bf1282eaa47",
        "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
        "version": "0.2.0"
      },
      "arguments": {
        "inputs": {
          "data": "steps.2.produce",
          "type": "CONTAINER"
        }
      },
      "type": "PRIMITIVE"
    },
    {
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "primitive": {
        "python_path": "d3m.primitives.data_cleaning.imputer.SKlearn",
        "name": "sklearn.impute.SimpleImputer",
        "digest": "9878fdeb255c5b4fb2beaf053e68b2913e3d7b1c26e40c530c1cb4fe562fde26",
        "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
        "version": "2019.4.4"
      },
      "hyperparams": {
        "return_result": {
          "data": "replace",
          "type": "VALUE"
        },
        "use_semantic_types": {
          "data": true,
          "type": "VALUE"
        },
        "strategy": {
          "data": "median",
          "type": "VALUE"
        }
      },
      "arguments": {
        "inputs": {
          "data": "steps.3.produce",
          "type": "CONTAINER"
        }
      },
      "type": "PRIMITIVE"
    },
    {
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "primitive": {
        "python_path": "d3m.primitives.data_preprocessing.robust_scaler.SKlearn",
        "name": "sklearn.preprocessing.data.RobustScaler",
        "digest": "7f93191721f64551afcaff9f5acde40febc1809ec53e25e7e8d8b179bfb9a8c5",
        "id": "854727ed-c82c-3137-ac59-fd52bc9ba385",
        "version": "2019.4.4"
      },
      "hyperparams": {
        "return_result": {
          "data": "replace",
          "type": "VALUE"
        }
      },
      "arguments": {
        "inputs": {
          "data": "steps.4.produce",
          "type": "CONTAINER"
        }
      },
      "type": "PRIMITIVE"
    },
    {
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "primitive": {
        "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
        "name": "Extracts columns by semantic type",
        "digest": "297a4943484bcd532650d5727e23b3d11ca702688d7b64dfb5df8bf1282eaa47",
        "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
        "version": "0.2.0"
      },
      "hyperparams": {
        "semantic_types": {
        "data": [
          "https://metadata.datadrivendiscovery.org/types/TrueTarget"
        ],
          "type": "VALUE"
        }
      },
      "arguments": {
        "inputs": {
          "data": "steps.1.produce",
          "type": "CONTAINER"
        }
      },
      "type": "PRIMITIVE"
    },
    {
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "primitive": {
        "python_path": "d3m.primitives.classification.bernoulli_naive_bayes.SKlearn",
        "name": "sklearn.naive_bayes.BernoulliNB",
        "digest": "b914e170288b33bad7d0fa6759b9bfcbba24a3e42d0916c6d483d5cdd024683a",
        "id": "SIMILAR_PRIMITIVE_C",
        "version": "2019.4.4"
      },
      "arguments": {
        "outputs": {
          "data": "steps.6.produce",
          "type": "CONTAINER"
        },
        "inputs": {
          "data": "steps.5.produce",
          "type": "CONTAINER"
        }
      },
      "type": "PRIMITIVE"
    },
    {
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "primitive": {
        "python_path": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
        "name": "Construct pipeline predictions output",
        "digest": "cfb2d595652c4ae0d24e67d4cb8e4916c9f3c2753eaccc2935263d054b3682fa",
        "id": "8d38b340-f83f-4877-baaa-162f8e551736",
        "version": "0.3.0"
      },
      "arguments": {
        "reference": {
          "data": "steps.1.produce",
          "type": "CONTAINER"
        },
        "inputs": {
          "data": "steps.7.produce",
          "type": "CONTAINER"
        }
      },
      "type": "PRIMITIVE"
    }
  ]
}
